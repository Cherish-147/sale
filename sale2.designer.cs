#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace sale
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="海产品管理系统")]
	public partial class saleDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertOrderItem(OrderItem instance);
    partial void UpdateOrderItem(OrderItem instance);
    partial void DeleteOrderItem(OrderItem instance);
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertCartltem(Cartltem instance);
    partial void UpdateCartltem(Cartltem instance);
    partial void DeleteCartltem(Cartltem instance);
    partial void InsertGoods(Goods instance);
    partial void UpdateGoods(Goods instance);
    partial void DeleteGoods(Goods instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertOrders(Orders instance);
    partial void UpdateOrders(Orders instance);
    partial void DeleteOrders(Orders instance);
    partial void Insertcategory(category instance);
    partial void Updatecategory(category instance);
    partial void Deletecategory(category instance);
    partial void InsertCustomers(Customers instance);
    partial void UpdateCustomers(Customers instance);
    partial void DeleteCustomers(Customers instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertStorehouse(Storehouse instance);
    partial void UpdateStorehouse(Storehouse instance);
    partial void DeleteStorehouse(Storehouse instance);
    partial void InsertSell_order(Sell_order instance);
    partial void UpdateSell_order(Sell_order instance);
    partial void DeleteSell_order(Sell_order instance);
    #endregion
		
		public saleDataContext() : 
				base(global::sale.Properties.Settings.Default.海产品管理系统ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public saleDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public saleDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public saleDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public saleDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<OrderItem> OrderItem
		{
			get
			{
				return this.GetTable<OrderItem>();
			}
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<Cartltem> Cartltem
		{
			get
			{
				return this.GetTable<Cartltem>();
			}
		}
		
		public System.Data.Linq.Table<Goods> Goods
		{
			get
			{
				return this.GetTable<Goods>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employee
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Orders> Orders
		{
			get
			{
				return this.GetTable<Orders>();
			}
		}
		
		public System.Data.Linq.Table<category> category
		{
			get
			{
				return this.GetTable<category>();
			}
		}
		
		public System.Data.Linq.Table<Customers> Customers
		{
			get
			{
				return this.GetTable<Customers>();
			}
		}
		
		public System.Data.Linq.Table<Department> Department
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Supplier
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<Storehouse> Storehouse
		{
			get
			{
				return this.GetTable<Storehouse>();
			}
		}
		
		public System.Data.Linq.Table<Sell_order> Sell_order
		{
			get
			{
				return this.GetTable<Sell_order>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderItem")]
	public partial class OrderItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Item_id;
		
		private int _order_id;
		
		private string _ProName;
		
		private int _ListPrice;
		
		private int _Qty;
		
		private int _totalprice;
		
		private EntityRef<Orders> _Orders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItem_idChanging(int value);
    partial void OnItem_idChanged();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void OnProNameChanging(string value);
    partial void OnProNameChanged();
    partial void OnListPriceChanging(int value);
    partial void OnListPriceChanged();
    partial void OnQtyChanging(int value);
    partial void OnQtyChanged();
    partial void OntotalpriceChanging(int value);
    partial void OntotalpriceChanged();
    #endregion
		
		public OrderItem()
		{
			this._Orders = default(EntityRef<Orders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Item_id
		{
			get
			{
				return this._Item_id;
			}
			set
			{
				if ((this._Item_id != value))
				{
					this.OnItem_idChanging(value);
					this.SendPropertyChanging();
					this._Item_id = value;
					this.SendPropertyChanged("Item_id");
					this.OnItem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int NOT NULL")]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					if (this._Orders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ProName
		{
			get
			{
				return this._ProName;
			}
			set
			{
				if ((this._ProName != value))
				{
					this.OnProNameChanging(value);
					this.SendPropertyChanging();
					this._ProName = value;
					this.SendPropertyChanged("ProName");
					this.OnProNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListPrice", DbType="Int NOT NULL")]
		public int ListPrice
		{
			get
			{
				return this._ListPrice;
			}
			set
			{
				if ((this._ListPrice != value))
				{
					this.OnListPriceChanging(value);
					this.SendPropertyChanging();
					this._ListPrice = value;
					this.SendPropertyChanged("ListPrice");
					this.OnListPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int NOT NULL")]
		public int Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalprice", DbType="Int NOT NULL")]
		public int totalprice
		{
			get
			{
				return this._totalprice;
			}
			set
			{
				if ((this._totalprice != value))
				{
					this.OntotalpriceChanging(value);
					this.SendPropertyChanging();
					this._totalprice = value;
					this.SendPropertyChanged("totalprice");
					this.OntotalpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderItem", Storage="_Orders", ThisKey="order_id", OtherKey="order_id", IsForeignKey=true)]
		public Orders Orders
		{
			get
			{
				return this._Orders.Entity;
			}
			set
			{
				Orders previousValue = this._Orders.Entity;
				if (((previousValue != value) 
							|| (this._Orders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Orders.Entity = null;
						previousValue.OrderItem.Remove(this);
					}
					this._Orders.Entity = value;
					if ((value != null))
					{
						value.OrderItem.Add(this);
						this._order_id = value.order_id;
					}
					else
					{
						this._order_id = default(int);
					}
					this.SendPropertyChanged("Orders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _pwd;
		
		private string _keys;
		
		private EntitySet<Orders> _Orders;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpwdChanging(string value);
    partial void OnpwdChanged();
    partial void OnkeysChanging(string value);
    partial void OnkeysChanged();
    #endregion
		
		public Users()
		{
			this._Orders = new EntitySet<Orders>(new Action<Orders>(this.attach_Orders), new Action<Orders>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pwd", DbType="VarChar(50)")]
		public string pwd
		{
			get
			{
				return this._pwd;
			}
			set
			{
				if ((this._pwd != value))
				{
					this.OnpwdChanging(value);
					this.SendPropertyChanging();
					this._pwd = value;
					this.SendPropertyChanged("pwd");
					this.OnpwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keys", DbType="VarChar(50)")]
		public string keys
		{
			get
			{
				return this._keys;
			}
			set
			{
				if ((this._keys != value))
				{
					this.OnkeysChanging(value);
					this.SendPropertyChanging();
					this._keys = value;
					this.SendPropertyChanged("keys");
					this.OnkeysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Orders", Storage="_Orders", ThisKey="username", OtherKey="username")]
		public EntitySet<Orders> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_Orders(Orders entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cartltem")]
	public partial class Cartltem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cartltem_id;
		
		private string _username;
		
		private int _Goods_id;
		
		private string _ProName;
		
		private System.Nullable<decimal> _ListPrice;
		
		private System.Nullable<int> _Qty;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCartltem_idChanging(int value);
    partial void OnCartltem_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnGoods_idChanging(int value);
    partial void OnGoods_idChanged();
    partial void OnProNameChanging(string value);
    partial void OnProNameChanged();
    partial void OnListPriceChanging(System.Nullable<decimal> value);
    partial void OnListPriceChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    #endregion
		
		public Cartltem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cartltem_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cartltem_id
		{
			get
			{
				return this._Cartltem_id;
			}
			set
			{
				if ((this._Cartltem_id != value))
				{
					this.OnCartltem_idChanging(value);
					this.SendPropertyChanging();
					this._Cartltem_id = value;
					this.SendPropertyChanged("Cartltem_id");
					this.OnCartltem_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goods_id", DbType="Int NOT NULL")]
		public int Goods_id
		{
			get
			{
				return this._Goods_id;
			}
			set
			{
				if ((this._Goods_id != value))
				{
					this.OnGoods_idChanging(value);
					this.SendPropertyChanging();
					this._Goods_id = value;
					this.SendPropertyChanged("Goods_id");
					this.OnGoods_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProName", DbType="NVarChar(50)")]
		public string ProName
		{
			get
			{
				return this._ProName;
			}
			set
			{
				if ((this._ProName != value))
				{
					this.OnProNameChanging(value);
					this.SendPropertyChanging();
					this._ProName = value;
					this.SendPropertyChanged("ProName");
					this.OnProNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListPrice", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ListPrice
		{
			get
			{
				return this._ListPrice;
			}
			set
			{
				if ((this._ListPrice != value))
				{
					this.OnListPriceChanging(value);
					this.SendPropertyChanging();
					this._ListPrice = value;
					this.SendPropertyChanged("ListPrice");
					this.OnListPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Goods")]
	public partial class Goods : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Goods_id;
		
		private string _Goods_name;
		
		private string _Classification_id;
		
		private string _Supplier_id;
		
		private System.Nullable<decimal> _Unit_price;
		
		private System.Nullable<int> _Stock_quantity;
		
		private System.Nullable<int> _Order_quantity;
		
		private string _Storehouse_id;
		
		private string _img;
		
		private EntitySet<Sell_order> _Sell_order;
		
		private EntityRef<category> _category;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<Storehouse> _Storehouse;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGoods_idChanging(string value);
    partial void OnGoods_idChanged();
    partial void OnGoods_nameChanging(string value);
    partial void OnGoods_nameChanged();
    partial void OnClassification_idChanging(string value);
    partial void OnClassification_idChanged();
    partial void OnSupplier_idChanging(string value);
    partial void OnSupplier_idChanged();
    partial void OnUnit_priceChanging(System.Nullable<decimal> value);
    partial void OnUnit_priceChanged();
    partial void OnStock_quantityChanging(System.Nullable<int> value);
    partial void OnStock_quantityChanged();
    partial void OnOrder_quantityChanging(System.Nullable<int> value);
    partial void OnOrder_quantityChanged();
    partial void OnStorehouse_idChanging(string value);
    partial void OnStorehouse_idChanged();
    partial void OnimgChanging(string value);
    partial void OnimgChanged();
    #endregion
		
		public Goods()
		{
			this._Sell_order = new EntitySet<Sell_order>(new Action<Sell_order>(this.attach_Sell_order), new Action<Sell_order>(this.detach_Sell_order));
			this._category = default(EntityRef<category>);
			this._Supplier = default(EntityRef<Supplier>);
			this._Storehouse = default(EntityRef<Storehouse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goods_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Goods_id
		{
			get
			{
				return this._Goods_id;
			}
			set
			{
				if ((this._Goods_id != value))
				{
					this.OnGoods_idChanging(value);
					this.SendPropertyChanging();
					this._Goods_id = value;
					this.SendPropertyChanged("Goods_id");
					this.OnGoods_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goods_name", DbType="VarChar(20)")]
		public string Goods_name
		{
			get
			{
				return this._Goods_name;
			}
			set
			{
				if ((this._Goods_name != value))
				{
					this.OnGoods_nameChanging(value);
					this.SendPropertyChanging();
					this._Goods_name = value;
					this.SendPropertyChanged("Goods_name");
					this.OnGoods_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Classification_id", DbType="VarChar(10)")]
		public string Classification_id
		{
			get
			{
				return this._Classification_id;
			}
			set
			{
				if ((this._Classification_id != value))
				{
					if (this._category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassification_idChanging(value);
					this.SendPropertyChanging();
					this._Classification_id = value;
					this.SendPropertyChanged("Classification_id");
					this.OnClassification_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier_id", DbType="VarChar(20)")]
		public string Supplier_id
		{
			get
			{
				return this._Supplier_id;
			}
			set
			{
				if ((this._Supplier_id != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplier_idChanging(value);
					this.SendPropertyChanging();
					this._Supplier_id = value;
					this.SendPropertyChanged("Supplier_id");
					this.OnSupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_price", DbType="Money")]
		public System.Nullable<decimal> Unit_price
		{
			get
			{
				return this._Unit_price;
			}
			set
			{
				if ((this._Unit_price != value))
				{
					this.OnUnit_priceChanging(value);
					this.SendPropertyChanging();
					this._Unit_price = value;
					this.SendPropertyChanged("Unit_price");
					this.OnUnit_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock_quantity", DbType="Int")]
		public System.Nullable<int> Stock_quantity
		{
			get
			{
				return this._Stock_quantity;
			}
			set
			{
				if ((this._Stock_quantity != value))
				{
					this.OnStock_quantityChanging(value);
					this.SendPropertyChanging();
					this._Stock_quantity = value;
					this.SendPropertyChanged("Stock_quantity");
					this.OnStock_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_quantity", DbType="Int")]
		public System.Nullable<int> Order_quantity
		{
			get
			{
				return this._Order_quantity;
			}
			set
			{
				if ((this._Order_quantity != value))
				{
					this.OnOrder_quantityChanging(value);
					this.SendPropertyChanging();
					this._Order_quantity = value;
					this.SendPropertyChanged("Order_quantity");
					this.OnOrder_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Storehouse_id", DbType="VarChar(20)")]
		public string Storehouse_id
		{
			get
			{
				return this._Storehouse_id;
			}
			set
			{
				if ((this._Storehouse_id != value))
				{
					if (this._Storehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStorehouse_idChanging(value);
					this.SendPropertyChanging();
					this._Storehouse_id = value;
					this.SendPropertyChanged("Storehouse_id");
					this.OnStorehouse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img", DbType="VarChar(50)")]
		public string img
		{
			get
			{
				return this._img;
			}
			set
			{
				if ((this._img != value))
				{
					this.OnimgChanging(value);
					this.SendPropertyChanging();
					this._img = value;
					this.SendPropertyChanged("img");
					this.OnimgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_Sell_order", Storage="_Sell_order", ThisKey="Goods_id", OtherKey="Goods_id")]
		public EntitySet<Sell_order> Sell_order
		{
			get
			{
				return this._Sell_order;
			}
			set
			{
				this._Sell_order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_Goods", Storage="_category", ThisKey="Classification_id", OtherKey="Classifcation_id", IsForeignKey=true)]
		public category category
		{
			get
			{
				return this._category.Entity;
			}
			set
			{
				category previousValue = this._category.Entity;
				if (((previousValue != value) 
							|| (this._category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._category.Entity = null;
						previousValue.Goods.Remove(this);
					}
					this._category.Entity = value;
					if ((value != null))
					{
						value.Goods.Add(this);
						this._Classification_id = value.Classifcation_id;
					}
					else
					{
						this._Classification_id = default(string);
					}
					this.SendPropertyChanged("category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Goods", Storage="_Supplier", ThisKey="Supplier_id", OtherKey="Supplier_id", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Goods.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Goods.Add(this);
						this._Supplier_id = value.Supplier_id;
					}
					else
					{
						this._Supplier_id = default(string);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Storehouse_Goods", Storage="_Storehouse", ThisKey="Storehouse_id", OtherKey="Storehouse_id", IsForeignKey=true)]
		public Storehouse Storehouse
		{
			get
			{
				return this._Storehouse.Entity;
			}
			set
			{
				Storehouse previousValue = this._Storehouse.Entity;
				if (((previousValue != value) 
							|| (this._Storehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Storehouse.Entity = null;
						previousValue.Goods.Remove(this);
					}
					this._Storehouse.Entity = value;
					if ((value != null))
					{
						value.Goods.Add(this);
						this._Storehouse_id = value.Storehouse_id;
					}
					else
					{
						this._Storehouse_id = default(string);
					}
					this.SendPropertyChanged("Storehouse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sell_order(Sell_order entity)
		{
			this.SendPropertyChanging();
			entity.Goods = this;
		}
		
		private void detach_Sell_order(Sell_order entity)
		{
			this.SendPropertyChanging();
			entity.Goods = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Employee_id;
		
		private string _Employee_name;
		
		private string _Sex;
		
		private System.DateTime _Birth_date;
		
		private System.DateTime _Hire_date;
		
		private string _Address;
		
		private string _Telephone;
		
		private System.Nullable<decimal> _Wages;
		
		private string _Department_id;
		
		private string _Resume;
		
		private EntitySet<Sell_order> _Sell_order;
		
		private EntityRef<Department> _Department;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployee_idChanging(string value);
    partial void OnEmployee_idChanged();
    partial void OnEmployee_nameChanging(string value);
    partial void OnEmployee_nameChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnBirth_dateChanging(System.DateTime value);
    partial void OnBirth_dateChanged();
    partial void OnHire_dateChanging(System.DateTime value);
    partial void OnHire_dateChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnWagesChanging(System.Nullable<decimal> value);
    partial void OnWagesChanged();
    partial void OnDepartment_idChanging(string value);
    partial void OnDepartment_idChanged();
    partial void OnResumeChanging(string value);
    partial void OnResumeChanged();
    #endregion
		
		public Employee()
		{
			this._Sell_order = new EntitySet<Sell_order>(new Action<Sell_order>(this.attach_Sell_order), new Action<Sell_order>(this.detach_Sell_order));
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Employee_id
		{
			get
			{
				return this._Employee_id;
			}
			set
			{
				if ((this._Employee_id != value))
				{
					this.OnEmployee_idChanging(value);
					this.SendPropertyChanging();
					this._Employee_id = value;
					this.SendPropertyChanged("Employee_id");
					this.OnEmployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_name", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Employee_name
		{
			get
			{
				return this._Employee_name;
			}
			set
			{
				if ((this._Employee_name != value))
				{
					this.OnEmployee_nameChanging(value);
					this.SendPropertyChanging();
					this._Employee_name = value;
					this.SendPropertyChanged("Employee_name");
					this.OnEmployee_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth_date", DbType="DateTime NOT NULL")]
		public System.DateTime Birth_date
		{
			get
			{
				return this._Birth_date;
			}
			set
			{
				if ((this._Birth_date != value))
				{
					this.OnBirth_dateChanging(value);
					this.SendPropertyChanging();
					this._Birth_date = value;
					this.SendPropertyChanged("Birth_date");
					this.OnBirth_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hire_date", DbType="DateTime NOT NULL")]
		public System.DateTime Hire_date
		{
			get
			{
				return this._Hire_date;
			}
			set
			{
				if ((this._Hire_date != value))
				{
					this.OnHire_dateChanging(value);
					this.SendPropertyChanging();
					this._Hire_date = value;
					this.SendPropertyChanged("Hire_date");
					this.OnHire_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NChar(11)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wages", DbType="Money")]
		public System.Nullable<decimal> Wages
		{
			get
			{
				return this._Wages;
			}
			set
			{
				if ((this._Wages != value))
				{
					this.OnWagesChanging(value);
					this.SendPropertyChanging();
					this._Wages = value;
					this.SendPropertyChanged("Wages");
					this.OnWagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_id", DbType="VarChar(20)")]
		public string Department_id
		{
			get
			{
				return this._Department_id;
			}
			set
			{
				if ((this._Department_id != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartment_idChanging(value);
					this.SendPropertyChanging();
					this._Department_id = value;
					this.SendPropertyChanged("Department_id");
					this.OnDepartment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resume", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Resume
		{
			get
			{
				return this._Resume;
			}
			set
			{
				if ((this._Resume != value))
				{
					this.OnResumeChanging(value);
					this.SendPropertyChanging();
					this._Resume = value;
					this.SendPropertyChanged("Resume");
					this.OnResumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Sell_order", Storage="_Sell_order", ThisKey="Employee_id", OtherKey="Employee_id")]
		public EntitySet<Sell_order> Sell_order
		{
			get
			{
				return this._Sell_order;
			}
			set
			{
				this._Sell_order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Department", ThisKey="Department_id", OtherKey="Department_id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Employee.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Employee.Add(this);
						this._Department_id = value.Department_id;
					}
					else
					{
						this._Department_id = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sell_order(Sell_order entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Sell_order(Sell_order entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Orders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _order_id;
		
		private string _username;
		
		private System.DateTime _order_time;
		
		private string _province;
		
		private string _city;
		
		private string _address;
		
		private string _zip;
		
		private string _phone;
		
		private string _status;
		
		private EntitySet<OrderItem> _OrderItem;
		
		private EntityRef<Users> _Users;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onorder_timeChanging(System.DateTime value);
    partial void Onorder_timeChanged();
    partial void OnprovinceChanging(string value);
    partial void OnprovinceChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnzipChanging(string value);
    partial void OnzipChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public Orders()
		{
			this._OrderItem = new EntitySet<OrderItem>(new Action<OrderItem>(this.attach_OrderItem), new Action<OrderItem>(this.detach_OrderItem));
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_time", DbType="DateTime NOT NULL")]
		public System.DateTime order_time
		{
			get
			{
				return this._order_time;
			}
			set
			{
				if ((this._order_time != value))
				{
					this.Onorder_timeChanging(value);
					this.SendPropertyChanging();
					this._order_time = value;
					this.SendPropertyChanged("order_time");
					this.Onorder_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string province
		{
			get
			{
				return this._province;
			}
			set
			{
				if ((this._province != value))
				{
					this.OnprovinceChanging(value);
					this.SendPropertyChanging();
					this._province = value;
					this.SendPropertyChanged("province");
					this.OnprovinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zip", DbType="VarChar(50)")]
		public string zip
		{
			get
			{
				return this._zip;
			}
			set
			{
				if ((this._zip != value))
				{
					this.OnzipChanging(value);
					this.SendPropertyChanging();
					this._zip = value;
					this.SendPropertyChanged("zip");
					this.OnzipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Orders_OrderItem", Storage="_OrderItem", ThisKey="order_id", OtherKey="order_id")]
		public EntitySet<OrderItem> OrderItem
		{
			get
			{
				return this._OrderItem;
			}
			set
			{
				this._OrderItem.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Orders", Storage="_Users", ThisKey="username", OtherKey="username", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._username = value.username;
					}
					else
					{
						this._username = default(string);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderItem(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Orders = this;
		}
		
		private void detach_OrderItem(OrderItem entity)
		{
			this.SendPropertyChanging();
			entity.Orders = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.category")]
	public partial class category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Classifcation_id;
		
		private string _Classifcation_name;
		
		private EntitySet<Goods> _Goods;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassifcation_idChanging(string value);
    partial void OnClassifcation_idChanged();
    partial void OnClassifcation_nameChanging(string value);
    partial void OnClassifcation_nameChanged();
    #endregion
		
		public category()
		{
			this._Goods = new EntitySet<Goods>(new Action<Goods>(this.attach_Goods), new Action<Goods>(this.detach_Goods));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Classifcation_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Classifcation_id
		{
			get
			{
				return this._Classifcation_id;
			}
			set
			{
				if ((this._Classifcation_id != value))
				{
					this.OnClassifcation_idChanging(value);
					this.SendPropertyChanging();
					this._Classifcation_id = value;
					this.SendPropertyChanged("Classifcation_id");
					this.OnClassifcation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Classifcation_name", DbType="NChar(10)")]
		public string Classifcation_name
		{
			get
			{
				return this._Classifcation_name;
			}
			set
			{
				if ((this._Classifcation_name != value))
				{
					this.OnClassifcation_nameChanging(value);
					this.SendPropertyChanging();
					this._Classifcation_name = value;
					this.SendPropertyChanged("Classifcation_name");
					this.OnClassifcation_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="category_Goods", Storage="_Goods", ThisKey="Classifcation_id", OtherKey="Classification_id")]
		public EntitySet<Goods> Goods
		{
			get
			{
				return this._Goods;
			}
			set
			{
				this._Goods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Goods(Goods entity)
		{
			this.SendPropertyChanging();
			entity.category = this;
		}
		
		private void detach_Goods(Goods entity)
		{
			this.SendPropertyChanging();
			entity.category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
	public partial class Customers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Customers_id;
		
		private string _Customers_name;
		
		private string _Telephone;
		
		private string _Email;
		
		private string _contacts;
		
		private string _company;
		
		private string _address;
		
		private EntitySet<Sell_order> _Sell_order;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomers_idChanging(string value);
    partial void OnCustomers_idChanged();
    partial void OnCustomers_nameChanging(string value);
    partial void OnCustomers_nameChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OncontactsChanging(string value);
    partial void OncontactsChanged();
    partial void OncompanyChanging(string value);
    partial void OncompanyChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    #endregion
		
		public Customers()
		{
			this._Sell_order = new EntitySet<Sell_order>(new Action<Sell_order>(this.attach_Sell_order), new Action<Sell_order>(this.detach_Sell_order));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customers_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Customers_id
		{
			get
			{
				return this._Customers_id;
			}
			set
			{
				if ((this._Customers_id != value))
				{
					this.OnCustomers_idChanging(value);
					this.SendPropertyChanging();
					this._Customers_id = value;
					this.SendPropertyChanged("Customers_id");
					this.OnCustomers_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customers_name", DbType="VarChar(20)")]
		public string Customers_name
		{
			get
			{
				return this._Customers_name;
			}
			set
			{
				if ((this._Customers_name != value))
				{
					this.OnCustomers_nameChanging(value);
					this.SendPropertyChanging();
					this._Customers_name = value;
					this.SendPropertyChanged("Customers_name");
					this.OnCustomers_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NChar(11)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contacts", DbType="VarChar(20)")]
		public string contacts
		{
			get
			{
				return this._contacts;
			}
			set
			{
				if ((this._contacts != value))
				{
					this.OncontactsChanging(value);
					this.SendPropertyChanging();
					this._contacts = value;
					this.SendPropertyChanged("contacts");
					this.OncontactsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_company", DbType="VarChar(20)")]
		public string company
		{
			get
			{
				return this._company;
			}
			set
			{
				if ((this._company != value))
				{
					this.OncompanyChanging(value);
					this.SendPropertyChanging();
					this._company = value;
					this.SendPropertyChanged("company");
					this.OncompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(50)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customers_Sell_order", Storage="_Sell_order", ThisKey="Customers_id", OtherKey="customers_id")]
		public EntitySet<Sell_order> Sell_order
		{
			get
			{
				return this._Sell_order;
			}
			set
			{
				this._Sell_order.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sell_order(Sell_order entity)
		{
			this.SendPropertyChanging();
			entity.Customers = this;
		}
		
		private void detach_Sell_order(Sell_order entity)
		{
			this.SendPropertyChanging();
			entity.Customers = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Department_id;
		
		private string _Department_name;
		
		private string _Manager_id;
		
		private string _Department_description;
		
		private string _Manager;
		
		private string _Telephone;
		
		private EntitySet<Employee> _Employee;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartment_idChanging(string value);
    partial void OnDepartment_idChanged();
    partial void OnDepartment_nameChanging(string value);
    partial void OnDepartment_nameChanged();
    partial void OnManager_idChanging(string value);
    partial void OnManager_idChanged();
    partial void OnDepartment_descriptionChanging(string value);
    partial void OnDepartment_descriptionChanged();
    partial void OnManagerChanging(string value);
    partial void OnManagerChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    #endregion
		
		public Department()
		{
			this._Employee = new EntitySet<Employee>(new Action<Employee>(this.attach_Employee), new Action<Employee>(this.detach_Employee));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Department_id
		{
			get
			{
				return this._Department_id;
			}
			set
			{
				if ((this._Department_id != value))
				{
					this.OnDepartment_idChanging(value);
					this.SendPropertyChanging();
					this._Department_id = value;
					this.SendPropertyChanged("Department_id");
					this.OnDepartment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_name", DbType="VarChar(20)")]
		public string Department_name
		{
			get
			{
				return this._Department_name;
			}
			set
			{
				if ((this._Department_name != value))
				{
					this.OnDepartment_nameChanging(value);
					this.SendPropertyChanging();
					this._Department_name = value;
					this.SendPropertyChanged("Department_name");
					this.OnDepartment_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager_id", DbType="VarChar(20)")]
		public string Manager_id
		{
			get
			{
				return this._Manager_id;
			}
			set
			{
				if ((this._Manager_id != value))
				{
					this.OnManager_idChanging(value);
					this.SendPropertyChanging();
					this._Manager_id = value;
					this.SendPropertyChanged("Manager_id");
					this.OnManager_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_description", DbType="VarChar(MAX)")]
		public string Department_description
		{
			get
			{
				return this._Department_description;
			}
			set
			{
				if ((this._Department_description != value))
				{
					this.OnDepartment_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Department_description = value;
					this.SendPropertyChanged("Department_description");
					this.OnDepartment_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager", DbType="VarChar(20)")]
		public string Manager
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					this.OnManagerChanging(value);
					this.SendPropertyChanging();
					this._Manager = value;
					this.SendPropertyChanged("Manager");
					this.OnManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(11)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Employee", ThisKey="Department_id", OtherKey="Department_id")]
		public EntitySet<Employee> Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				this._Employee.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supplier")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Supplier_id;
		
		private string _Supplier_name;
		
		private string _director;
		
		private string _telephone;
		
		private EntitySet<Goods> _Goods;
		
		private EntityRef<Supplier> _Supplier2;
		
		private EntityRef<Supplier> _Supplier1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplier_idChanging(string value);
    partial void OnSupplier_idChanged();
    partial void OnSupplier_nameChanging(string value);
    partial void OnSupplier_nameChanged();
    partial void OndirectorChanging(string value);
    partial void OndirectorChanged();
    partial void OntelephoneChanging(string value);
    partial void OntelephoneChanged();
    #endregion
		
		public Supplier()
		{
			this._Goods = new EntitySet<Goods>(new Action<Goods>(this.attach_Goods), new Action<Goods>(this.detach_Goods));
			this._Supplier2 = default(EntityRef<Supplier>);
			this._Supplier1 = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Supplier_id
		{
			get
			{
				return this._Supplier_id;
			}
			set
			{
				if ((this._Supplier_id != value))
				{
					if (this._Supplier1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplier_idChanging(value);
					this.SendPropertyChanging();
					this._Supplier_id = value;
					this.SendPropertyChanged("Supplier_id");
					this.OnSupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier_name", DbType="NChar(10)")]
		public string Supplier_name
		{
			get
			{
				return this._Supplier_name;
			}
			set
			{
				if ((this._Supplier_name != value))
				{
					this.OnSupplier_nameChanging(value);
					this.SendPropertyChanging();
					this._Supplier_name = value;
					this.SendPropertyChanged("Supplier_name");
					this.OnSupplier_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_director", DbType="NChar(10)")]
		public string director
		{
			get
			{
				return this._director;
			}
			set
			{
				if ((this._director != value))
				{
					this.OndirectorChanging(value);
					this.SendPropertyChanging();
					this._director = value;
					this.SendPropertyChanged("director");
					this.OndirectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telephone", DbType="NChar(11)")]
		public string telephone
		{
			get
			{
				return this._telephone;
			}
			set
			{
				if ((this._telephone != value))
				{
					this.OntelephoneChanging(value);
					this.SendPropertyChanging();
					this._telephone = value;
					this.SendPropertyChanged("telephone");
					this.OntelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Goods", Storage="_Goods", ThisKey="Supplier_id", OtherKey="Supplier_id")]
		public EntitySet<Goods> Goods
		{
			get
			{
				return this._Goods;
			}
			set
			{
				this._Goods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Supplier", Storage="_Supplier2", ThisKey="Supplier_id", OtherKey="Supplier_id", IsUnique=true, IsForeignKey=false)]
		public Supplier Supplier2
		{
			get
			{
				return this._Supplier2.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier2.Entity;
				if (((previousValue != value) 
							|| (this._Supplier2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier2.Entity = null;
						previousValue.Supplier1 = null;
					}
					this._Supplier2.Entity = value;
					if ((value != null))
					{
						value.Supplier1 = this;
					}
					this.SendPropertyChanged("Supplier2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Supplier", Storage="_Supplier1", ThisKey="Supplier_id", OtherKey="Supplier_id", IsForeignKey=true)]
		public Supplier Supplier1
		{
			get
			{
				return this._Supplier1.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier1.Entity;
				if (((previousValue != value) 
							|| (this._Supplier1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier1.Entity = null;
						previousValue.Supplier2 = null;
					}
					this._Supplier1.Entity = value;
					if ((value != null))
					{
						value.Supplier2 = this;
						this._Supplier_id = value.Supplier_id;
					}
					else
					{
						this._Supplier_id = default(string);
					}
					this.SendPropertyChanged("Supplier1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Goods(Goods entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_Goods(Goods entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Storehouse")]
	public partial class Storehouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Storehouse_id;
		
		private string _Area;
		
		private string _Telephone;
		
		private string _director;
		
		private EntitySet<Goods> _Goods;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStorehouse_idChanging(string value);
    partial void OnStorehouse_idChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OndirectorChanging(string value);
    partial void OndirectorChanged();
    #endregion
		
		public Storehouse()
		{
			this._Goods = new EntitySet<Goods>(new Action<Goods>(this.attach_Goods), new Action<Goods>(this.detach_Goods));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Storehouse_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Storehouse_id
		{
			get
			{
				return this._Storehouse_id;
			}
			set
			{
				if ((this._Storehouse_id != value))
				{
					this.OnStorehouse_idChanging(value);
					this.SendPropertyChanging();
					this._Storehouse_id = value;
					this.SendPropertyChanged("Storehouse_id");
					this.OnStorehouse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NChar(11)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_director", DbType="VarChar(20)")]
		public string director
		{
			get
			{
				return this._director;
			}
			set
			{
				if ((this._director != value))
				{
					this.OndirectorChanging(value);
					this.SendPropertyChanging();
					this._director = value;
					this.SendPropertyChanged("director");
					this.OndirectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Storehouse_Goods", Storage="_Goods", ThisKey="Storehouse_id", OtherKey="Storehouse_id")]
		public EntitySet<Goods> Goods
		{
			get
			{
				return this._Goods;
			}
			set
			{
				this._Goods.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Goods(Goods entity)
		{
			this.SendPropertyChanging();
			entity.Storehouse = this;
		}
		
		private void detach_Goods(Goods entity)
		{
			this.SendPropertyChanging();
			entity.Storehouse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sell_order")]
	public partial class Sell_order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Order_id;
		
		private string _Employee_id;
		
		private string _Goods_id;
		
		private int _Order_num;
		
		private string _customers_id;
		
		private string _Transporter_id;
		
		private System.Nullable<float> _Discount;
		
		private System.Nullable<System.DateTime> _Order_date;
		
		private System.Nullable<System.DateTime> _Send_date;
		
		private System.Nullable<System.DateTime> _Ariver_date;
		
		private System.Nullable<decimal> _cost;
		
		private System.Nullable<int> _kg;
		
		private EntityRef<Goods> _Goods;
		
		private EntityRef<Customers> _Customers;
		
		private EntityRef<Employee> _Employee;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrder_idChanging(string value);
    partial void OnOrder_idChanged();
    partial void OnEmployee_idChanging(string value);
    partial void OnEmployee_idChanged();
    partial void OnGoods_idChanging(string value);
    partial void OnGoods_idChanged();
    partial void OnOrder_numChanging(int value);
    partial void OnOrder_numChanged();
    partial void Oncustomers_idChanging(string value);
    partial void Oncustomers_idChanged();
    partial void OnTransporter_idChanging(string value);
    partial void OnTransporter_idChanged();
    partial void OnDiscountChanging(System.Nullable<float> value);
    partial void OnDiscountChanged();
    partial void OnOrder_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrder_dateChanged();
    partial void OnSend_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnSend_dateChanged();
    partial void OnAriver_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnAriver_dateChanged();
    partial void OncostChanging(System.Nullable<decimal> value);
    partial void OncostChanged();
    partial void OnkgChanging(System.Nullable<int> value);
    partial void OnkgChanged();
    #endregion
		
		public Sell_order()
		{
			this._Goods = default(EntityRef<Goods>);
			this._Customers = default(EntityRef<Customers>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Order_id
		{
			get
			{
				return this._Order_id;
			}
			set
			{
				if ((this._Order_id != value))
				{
					this.OnOrder_idChanging(value);
					this.SendPropertyChanging();
					this._Order_id = value;
					this.SendPropertyChanged("Order_id");
					this.OnOrder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Employee_id
		{
			get
			{
				return this._Employee_id;
			}
			set
			{
				if ((this._Employee_id != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployee_idChanging(value);
					this.SendPropertyChanging();
					this._Employee_id = value;
					this.SendPropertyChanged("Employee_id");
					this.OnEmployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goods_id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Goods_id
		{
			get
			{
				return this._Goods_id;
			}
			set
			{
				if ((this._Goods_id != value))
				{
					if (this._Goods.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGoods_idChanging(value);
					this.SendPropertyChanging();
					this._Goods_id = value;
					this.SendPropertyChanged("Goods_id");
					this.OnGoods_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_num", DbType="Int NOT NULL")]
		public int Order_num
		{
			get
			{
				return this._Order_num;
			}
			set
			{
				if ((this._Order_num != value))
				{
					this.OnOrder_numChanging(value);
					this.SendPropertyChanging();
					this._Order_num = value;
					this.SendPropertyChanged("Order_num");
					this.OnOrder_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customers_id", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string customers_id
		{
			get
			{
				return this._customers_id;
			}
			set
			{
				if ((this._customers_id != value))
				{
					if (this._Customers.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomers_idChanging(value);
					this.SendPropertyChanging();
					this._customers_id = value;
					this.SendPropertyChanged("customers_id");
					this.Oncustomers_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transporter_id", DbType="VarChar(20)")]
		public string Transporter_id
		{
			get
			{
				return this._Transporter_id;
			}
			set
			{
				if ((this._Transporter_id != value))
				{
					this.OnTransporter_idChanging(value);
					this.SendPropertyChanging();
					this._Transporter_id = value;
					this.SendPropertyChanged("Transporter_id");
					this.OnTransporter_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Real")]
		public System.Nullable<float> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Order_date
		{
			get
			{
				return this._Order_date;
			}
			set
			{
				if ((this._Order_date != value))
				{
					this.OnOrder_dateChanging(value);
					this.SendPropertyChanging();
					this._Order_date = value;
					this.SendPropertyChanged("Order_date");
					this.OnOrder_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Send_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Send_date
		{
			get
			{
				return this._Send_date;
			}
			set
			{
				if ((this._Send_date != value))
				{
					this.OnSend_dateChanging(value);
					this.SendPropertyChanging();
					this._Send_date = value;
					this.SendPropertyChanged("Send_date");
					this.OnSend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ariver_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ariver_date
		{
			get
			{
				return this._Ariver_date;
			}
			set
			{
				if ((this._Ariver_date != value))
				{
					this.OnAriver_dateChanging(value);
					this.SendPropertyChanging();
					this._Ariver_date = value;
					this.SendPropertyChanged("Ariver_date");
					this.OnAriver_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Money")]
		public System.Nullable<decimal> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kg", DbType="Int")]
		public System.Nullable<int> kg
		{
			get
			{
				return this._kg;
			}
			set
			{
				if ((this._kg != value))
				{
					this.OnkgChanging(value);
					this.SendPropertyChanging();
					this._kg = value;
					this.SendPropertyChanged("kg");
					this.OnkgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_Sell_order", Storage="_Goods", ThisKey="Goods_id", OtherKey="Goods_id", IsForeignKey=true)]
		public Goods Goods
		{
			get
			{
				return this._Goods.Entity;
			}
			set
			{
				Goods previousValue = this._Goods.Entity;
				if (((previousValue != value) 
							|| (this._Goods.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Goods.Entity = null;
						previousValue.Sell_order.Remove(this);
					}
					this._Goods.Entity = value;
					if ((value != null))
					{
						value.Sell_order.Add(this);
						this._Goods_id = value.Goods_id;
					}
					else
					{
						this._Goods_id = default(string);
					}
					this.SendPropertyChanged("Goods");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customers_Sell_order", Storage="_Customers", ThisKey="customers_id", OtherKey="Customers_id", IsForeignKey=true)]
		public Customers Customers
		{
			get
			{
				return this._Customers.Entity;
			}
			set
			{
				Customers previousValue = this._Customers.Entity;
				if (((previousValue != value) 
							|| (this._Customers.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customers.Entity = null;
						previousValue.Sell_order.Remove(this);
					}
					this._Customers.Entity = value;
					if ((value != null))
					{
						value.Sell_order.Add(this);
						this._customers_id = value.Customers_id;
					}
					else
					{
						this._customers_id = default(string);
					}
					this.SendPropertyChanged("Customers");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Sell_order", Storage="_Employee", ThisKey="Employee_id", OtherKey="Employee_id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Sell_order.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Sell_order.Add(this);
						this._Employee_id = value.Employee_id;
					}
					else
					{
						this._Employee_id = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
