#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace sale
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="海产品管理系统")]
	public partial class 海产品管理系统DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertGoods(Goods instance);
    partial void UpdateGoods(Goods instance);
    partial void DeleteGoods(Goods instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    #endregion
		
		public 海产品管理系统DataContext() : 
				base(global::sale.Properties.Settings.Default.海产品管理系统ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public 海产品管理系统DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public 海产品管理系统DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public 海产品管理系统DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public 海产品管理系统DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employee
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Goods> Goods
		{
			get
			{
				return this.GetTable<Goods>();
			}
		}
		
		public System.Data.Linq.Table<Department> Department
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _pwd;
		
		private string _keys;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpwdChanging(string value);
    partial void OnpwdChanged();
    partial void OnkeysChanging(string value);
    partial void OnkeysChanged();
    #endregion
		
		public Users()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pwd", DbType="VarChar(50)")]
		public string pwd
		{
			get
			{
				return this._pwd;
			}
			set
			{
				if ((this._pwd != value))
				{
					this.OnpwdChanging(value);
					this.SendPropertyChanging();
					this._pwd = value;
					this.SendPropertyChanged("pwd");
					this.OnpwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keys", DbType="VarChar(50)")]
		public string keys
		{
			get
			{
				return this._keys;
			}
			set
			{
				if ((this._keys != value))
				{
					this.OnkeysChanging(value);
					this.SendPropertyChanging();
					this._keys = value;
					this.SendPropertyChanged("keys");
					this.OnkeysChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Employee_id;
		
		private string _Employee_name;
		
		private string _Sex;
		
		private System.DateTime _Birth_date;
		
		private System.DateTime _Hire_date;
		
		private string _Address;
		
		private string _Telephone;
		
		private System.Nullable<decimal> _Wages;
		
		private string _Department_id;
		
		private string _Resume;
		
		private EntityRef<Department> _Department;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployee_idChanging(string value);
    partial void OnEmployee_idChanged();
    partial void OnEmployee_nameChanging(string value);
    partial void OnEmployee_nameChanged();
    partial void OnSexChanging(string value);
    partial void OnSexChanged();
    partial void OnBirth_dateChanging(System.DateTime value);
    partial void OnBirth_dateChanged();
    partial void OnHire_dateChanging(System.DateTime value);
    partial void OnHire_dateChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnWagesChanging(System.Nullable<decimal> value);
    partial void OnWagesChanged();
    partial void OnDepartment_idChanging(string value);
    partial void OnDepartment_idChanged();
    partial void OnResumeChanging(string value);
    partial void OnResumeChanged();
    #endregion
		
		public Employee()
		{
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Employee_id
		{
			get
			{
				return this._Employee_id;
			}
			set
			{
				if ((this._Employee_id != value))
				{
					this.OnEmployee_idChanging(value);
					this.SendPropertyChanging();
					this._Employee_id = value;
					this.SendPropertyChanged("Employee_id");
					this.OnEmployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee_name", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Employee_name
		{
			get
			{
				return this._Employee_name;
			}
			set
			{
				if ((this._Employee_name != value))
				{
					this.OnEmployee_nameChanging(value);
					this.SendPropertyChanging();
					this._Employee_name = value;
					this.SendPropertyChanged("Employee_name");
					this.OnEmployee_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birth_date", DbType="DateTime NOT NULL")]
		public System.DateTime Birth_date
		{
			get
			{
				return this._Birth_date;
			}
			set
			{
				if ((this._Birth_date != value))
				{
					this.OnBirth_dateChanging(value);
					this.SendPropertyChanging();
					this._Birth_date = value;
					this.SendPropertyChanged("Birth_date");
					this.OnBirth_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hire_date", DbType="DateTime NOT NULL")]
		public System.DateTime Hire_date
		{
			get
			{
				return this._Hire_date;
			}
			set
			{
				if ((this._Hire_date != value))
				{
					this.OnHire_dateChanging(value);
					this.SendPropertyChanging();
					this._Hire_date = value;
					this.SendPropertyChanged("Hire_date");
					this.OnHire_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NChar(11)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wages", DbType="Money")]
		public System.Nullable<decimal> Wages
		{
			get
			{
				return this._Wages;
			}
			set
			{
				if ((this._Wages != value))
				{
					this.OnWagesChanging(value);
					this.SendPropertyChanging();
					this._Wages = value;
					this.SendPropertyChanged("Wages");
					this.OnWagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_id", DbType="VarChar(20)")]
		public string Department_id
		{
			get
			{
				return this._Department_id;
			}
			set
			{
				if ((this._Department_id != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartment_idChanging(value);
					this.SendPropertyChanging();
					this._Department_id = value;
					this.SendPropertyChanged("Department_id");
					this.OnDepartment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Resume", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Resume
		{
			get
			{
				return this._Resume;
			}
			set
			{
				if ((this._Resume != value))
				{
					this.OnResumeChanging(value);
					this.SendPropertyChanging();
					this._Resume = value;
					this.SendPropertyChanged("Resume");
					this.OnResumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Department", ThisKey="Department_id", OtherKey="Department_id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Employee.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Employee.Add(this);
						this._Department_id = value.Department_id;
					}
					else
					{
						this._Department_id = default(string);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Goods")]
	public partial class Goods : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Goods_id;
		
		private string _Goods_name;
		
		private string _Classification_id;
		
		private string _Supplier_id;
		
		private System.Nullable<decimal> _Unit_price;
		
		private System.Nullable<int> _Stock_quantity;
		
		private System.Nullable<int> _Order_quantity;
		
		private string _Storehouse_id;
		
		private string _img;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGoods_idChanging(string value);
    partial void OnGoods_idChanged();
    partial void OnGoods_nameChanging(string value);
    partial void OnGoods_nameChanged();
    partial void OnClassification_idChanging(string value);
    partial void OnClassification_idChanged();
    partial void OnSupplier_idChanging(string value);
    partial void OnSupplier_idChanged();
    partial void OnUnit_priceChanging(System.Nullable<decimal> value);
    partial void OnUnit_priceChanged();
    partial void OnStock_quantityChanging(System.Nullable<int> value);
    partial void OnStock_quantityChanged();
    partial void OnOrder_quantityChanging(System.Nullable<int> value);
    partial void OnOrder_quantityChanged();
    partial void OnStorehouse_idChanging(string value);
    partial void OnStorehouse_idChanged();
    partial void OnimgChanging(string value);
    partial void OnimgChanged();
    #endregion
		
		public Goods()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goods_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Goods_id
		{
			get
			{
				return this._Goods_id;
			}
			set
			{
				if ((this._Goods_id != value))
				{
					this.OnGoods_idChanging(value);
					this.SendPropertyChanging();
					this._Goods_id = value;
					this.SendPropertyChanged("Goods_id");
					this.OnGoods_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Goods_name", DbType="VarChar(20)")]
		public string Goods_name
		{
			get
			{
				return this._Goods_name;
			}
			set
			{
				if ((this._Goods_name != value))
				{
					this.OnGoods_nameChanging(value);
					this.SendPropertyChanging();
					this._Goods_name = value;
					this.SendPropertyChanged("Goods_name");
					this.OnGoods_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Classification_id", DbType="VarChar(10)")]
		public string Classification_id
		{
			get
			{
				return this._Classification_id;
			}
			set
			{
				if ((this._Classification_id != value))
				{
					this.OnClassification_idChanging(value);
					this.SendPropertyChanging();
					this._Classification_id = value;
					this.SendPropertyChanged("Classification_id");
					this.OnClassification_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Supplier_id", DbType="VarChar(20)")]
		public string Supplier_id
		{
			get
			{
				return this._Supplier_id;
			}
			set
			{
				if ((this._Supplier_id != value))
				{
					this.OnSupplier_idChanging(value);
					this.SendPropertyChanging();
					this._Supplier_id = value;
					this.SendPropertyChanged("Supplier_id");
					this.OnSupplier_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_price", DbType="Money")]
		public System.Nullable<decimal> Unit_price
		{
			get
			{
				return this._Unit_price;
			}
			set
			{
				if ((this._Unit_price != value))
				{
					this.OnUnit_priceChanging(value);
					this.SendPropertyChanging();
					this._Unit_price = value;
					this.SendPropertyChanged("Unit_price");
					this.OnUnit_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock_quantity", DbType="Int")]
		public System.Nullable<int> Stock_quantity
		{
			get
			{
				return this._Stock_quantity;
			}
			set
			{
				if ((this._Stock_quantity != value))
				{
					this.OnStock_quantityChanging(value);
					this.SendPropertyChanging();
					this._Stock_quantity = value;
					this.SendPropertyChanged("Stock_quantity");
					this.OnStock_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_quantity", DbType="Int")]
		public System.Nullable<int> Order_quantity
		{
			get
			{
				return this._Order_quantity;
			}
			set
			{
				if ((this._Order_quantity != value))
				{
					this.OnOrder_quantityChanging(value);
					this.SendPropertyChanging();
					this._Order_quantity = value;
					this.SendPropertyChanged("Order_quantity");
					this.OnOrder_quantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Storehouse_id", DbType="VarChar(20)")]
		public string Storehouse_id
		{
			get
			{
				return this._Storehouse_id;
			}
			set
			{
				if ((this._Storehouse_id != value))
				{
					this.OnStorehouse_idChanging(value);
					this.SendPropertyChanging();
					this._Storehouse_id = value;
					this.SendPropertyChanged("Storehouse_id");
					this.OnStorehouse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img", DbType="VarChar(50)")]
		public string img
		{
			get
			{
				return this._img;
			}
			set
			{
				if ((this._img != value))
				{
					this.OnimgChanging(value);
					this.SendPropertyChanging();
					this._img = value;
					this.SendPropertyChanged("img");
					this.OnimgChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Department_id;
		
		private string _Department_name;
		
		private string _Manager_id;
		
		private string _Department_description;
		
		private string _Manager;
		
		private string _Telephone;
		
		private EntitySet<Employee> _Employee;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartment_idChanging(string value);
    partial void OnDepartment_idChanged();
    partial void OnDepartment_nameChanging(string value);
    partial void OnDepartment_nameChanged();
    partial void OnManager_idChanging(string value);
    partial void OnManager_idChanged();
    partial void OnDepartment_descriptionChanging(string value);
    partial void OnDepartment_descriptionChanged();
    partial void OnManagerChanging(string value);
    partial void OnManagerChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    #endregion
		
		public Department()
		{
			this._Employee = new EntitySet<Employee>(new Action<Employee>(this.attach_Employee), new Action<Employee>(this.detach_Employee));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_id", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Department_id
		{
			get
			{
				return this._Department_id;
			}
			set
			{
				if ((this._Department_id != value))
				{
					this.OnDepartment_idChanging(value);
					this.SendPropertyChanging();
					this._Department_id = value;
					this.SendPropertyChanged("Department_id");
					this.OnDepartment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_name", DbType="VarChar(20)")]
		public string Department_name
		{
			get
			{
				return this._Department_name;
			}
			set
			{
				if ((this._Department_name != value))
				{
					this.OnDepartment_nameChanging(value);
					this.SendPropertyChanging();
					this._Department_name = value;
					this.SendPropertyChanged("Department_name");
					this.OnDepartment_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager_id", DbType="VarChar(20)")]
		public string Manager_id
		{
			get
			{
				return this._Manager_id;
			}
			set
			{
				if ((this._Manager_id != value))
				{
					this.OnManager_idChanging(value);
					this.SendPropertyChanging();
					this._Manager_id = value;
					this.SendPropertyChanged("Manager_id");
					this.OnManager_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department_description", DbType="VarChar(MAX)")]
		public string Department_description
		{
			get
			{
				return this._Department_description;
			}
			set
			{
				if ((this._Department_description != value))
				{
					this.OnDepartment_descriptionChanging(value);
					this.SendPropertyChanging();
					this._Department_description = value;
					this.SendPropertyChanged("Department_description");
					this.OnDepartment_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager", DbType="VarChar(20)")]
		public string Manager
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					this.OnManagerChanging(value);
					this.SendPropertyChanging();
					this._Manager = value;
					this.SendPropertyChanged("Manager");
					this.OnManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="VarChar(11)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Employee", ThisKey="Department_id", OtherKey="Department_id")]
		public EntitySet<Employee> Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				this._Employee.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Employee(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
}
#pragma warning restore 1591
